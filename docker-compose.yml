services:
  mysql:
    image: mysql:8.0
    container_name: ligue-lead-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ligue_lead_challenge
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-ppassword",
        ]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: ligue-lead-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  migrate:
    build: .
    container_name: ligue-lead-migrate
    env_file:
      - .env
    environment:
      # Override .env values for Docker environment
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      mysql:
        condition: service_healthy
    restart: "no"
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    command: sh -c "npm run migrate:init"

  app:
    build: .
    container_name: ligue-lead-app
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ligue_lead_challenge
      DB_USER: root
      DB_PASS: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: "*"
      CORS_CREDENTIALS: false
      CORS_METHODS: "GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS"
      CORS_ALLOWED_HEADERS: "Content-Type,Authorization,X-Requested-With"
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

volumes:
  mysql_data:
  redis_data:
